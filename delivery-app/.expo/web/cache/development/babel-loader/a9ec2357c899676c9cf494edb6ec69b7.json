{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from \"react\";\nimport CategoryCard from \"./CategoryCard\";\nimport client, { urlFor } from \"../sanity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Categories = function Categories() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  useEffect(function () {\n    client.fetch(\"\\n       *[_type == \\\"category\\\"]\\n       \").then(function (data) {\n      setCategories(data);\n    });\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      paddingHorizontal: 15,\n      paddingTop: 10\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    children: categories == null ? void 0 : categories.map(function (category) {\n      return _jsx(CategoryCard, {\n        imgUrl: urlFor(category.image).url(),\n        title: category.name\n      }, category._id);\n    })\n  });\n};\n\nexport default Categories;","map":{"version":3,"names":["React","useEffect","useState","CategoryCard","client","urlFor","Categories","categories","setCategories","fetch","then","data","paddingHorizontal","paddingTop","map","category","image","url","name","_id"],"sources":["/Users/shivam/Projects/React-native/delivery-app/components/Categories.js"],"sourcesContent":["import { View, Text, ScrollView } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport CategoryCard from \"./CategoryCard\";\nimport client, { urlFor } from \"../sanity\";\n\nconst Categories = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    client\n      .fetch(\n        `\n       *[_type == \"category\"]\n       `\n      )\n      .then((data) => {\n        setCategories(data);\n      });\n  }, []);\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        paddingHorizontal: 15,\n        paddingTop: 10,\n      }}\n      horizontal\n      showsHorizontalScrollIndicator={false}\n    >\n      {categories?.map((category) => (\n        <CategoryCard\n          key={category._id}\n          imgUrl={urlFor(category.image).url()}\n          title={category.name}\n        />\n      ))}\n    </ScrollView>\n  );\n};\n\nexport default Categories;\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP,IAAiBC,MAAjB;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACvB,gBAAoCJ,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOK,UAAP;EAAA,IAAmBC,aAAnB;;EAEAP,SAAS,CAAC,YAAM;IACdG,MAAM,CACHK,KADH,+CAMGC,IANH,CAMQ,UAACC,IAAD,EAAU;MACdH,aAAa,CAACG,IAAD,CAAb;IACD,CARH;EASD,CAVQ,EAUN,EAVM,CAAT;EAWA,OACE,KAAC,UAAD;IACE,qBAAqB,EAAE;MACrBC,iBAAiB,EAAE,EADE;MAErBC,UAAU,EAAE;IAFS,CADzB;IAKE,UAAU,MALZ;IAME,8BAA8B,EAAE,KANlC;IAAA,UAQGN,UARH,oBAQGA,UAAU,CAAEO,GAAZ,CAAgB,UAACC,QAAD;MAAA,OACf,KAAC,YAAD;QAEE,MAAM,EAAEV,MAAM,CAACU,QAAQ,CAACC,KAAV,CAAN,CAAuBC,GAAvB,EAFV;QAGE,KAAK,EAAEF,QAAQ,CAACG;MAHlB,GACOH,QAAQ,CAACI,GADhB,CADe;IAAA,CAAhB;EARH,EADF;AAkBD,CAhCD;;AAkCA,eAAeb,UAAf"},"metadata":{},"sourceType":"module"}