{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport RNStyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from \"react\";\nimport { urlFor } from \"../sanity\";\nimport { MinusCircleIcon } from \"react-native-heroicons/outline\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar DishRow = function DishRow(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      description = _ref.description,\n      image = _ref.image,\n      price = _ref.price;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPressed = _useState2[0],\n      setIsPressed = _useState2[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StyledComponent, {\n      className: \"bg-white border p-4 border-gray-200\",\n      component: TouchableOpacity,\n      children: _jsxs(StyledComponent, {\n        className: \"flex-row\",\n        component: View,\n        children: [_jsxs(StyledComponent, {\n          className: \"flex-1 pr-2\",\n          component: View,\n          children: [_jsx(StyledComponent, {\n            className: \"text-lg mb-1\",\n            component: Text,\n            children: name\n          }), _jsx(StyledComponent, {\n            className: \"text-gray-400\",\n            component: Text,\n            children: description\n          }), _jsxs(StyledComponent, {\n            className: \"text-gray-400 mt-2 text-l font-bold\",\n            component: Text,\n            children: [\"\\u20B9\", price]\n          })]\n        }), _jsx(View, {\n          children: _jsx(StyledComponent, {\n            style: {\n              borderWidth: 1,\n              borderColor: \"#F3F3F4\"\n            },\n            source: {\n              uri: urlFor(image).url()\n            },\n            className: \"h-20 w-20\",\n            component: Image\n          })\n        })]\n      })\n    }), isPressed && _jsx(View, {\n      children: _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          children: _jsx(MinusCircleIcon, {\n            color: items.length > 0 ? \"#00CCBB\" : \"gray\"\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default DishRow;\nglobalThis.tailwindcss_react_native_style = Object.assign(globalThis.tailwindcss_react_native_style || {}, RNStyleSheet.create({\n  \"mb-1\": {\n    \"marginBottom\": 4\n  },\n  \"mt-2\": {\n    \"marginTop\": 8\n  },\n  \"h-20\": {\n    \"height\": 80\n  },\n  \"w-20\": {\n    \"width\": 80\n  },\n  \"flex-1\": {\n    \"flexGrow\": 1,\n    \"flexShrink\": 1\n  },\n  \"flex-row\": {\n    \"flexDirection\": \"row\"\n  },\n  \"border\": {\n    \"borderTopWidth\": RNStyleSheet.hairlineWidth,\n    \"borderRightWidth\": RNStyleSheet.hairlineWidth,\n    \"borderBottomWidth\": RNStyleSheet.hairlineWidth,\n    \"borderLeftWidth\": RNStyleSheet.hairlineWidth\n  },\n  \"border-gray-400\": {\n    \"borderTopColor\": \"rgba(156, 163, 175, 1)\",\n    \"borderRightColor\": \"rgba(156, 163, 175, 1)\",\n    \"borderBottomColor\": \"rgba(156, 163, 175, 1)\",\n    \"borderLeftColor\": \"rgba(156, 163, 175, 1)\"\n  },\n  \"border-gray-200\": {\n    \"borderTopColor\": \"rgba(229, 231, 235, 1)\",\n    \"borderRightColor\": \"rgba(229, 231, 235, 1)\",\n    \"borderBottomColor\": \"rgba(229, 231, 235, 1)\",\n    \"borderLeftColor\": \"rgba(229, 231, 235, 1)\"\n  },\n  \"bg-white\": {\n    \"backgroundColor\": \"rgba(255, 255, 255, 1)\"\n  },\n  \"p-4\": {\n    \"paddingTop\": 16,\n    \"paddingRight\": 16,\n    \"paddingBottom\": 16,\n    \"paddingLeft\": 16\n  },\n  \"pr-2\": {\n    \"paddingRight\": 8\n  },\n  \"font-bold\": {\n    \"fontWeight\": \"700\"\n  },\n  \"text-gray-400\": {\n    \"color\": \"#9ca3af\"\n  },\n  \"text-gray-600\": {\n    \"color\": \"#4b5563\"\n  },\n  \"text-gray-500\": {\n    \"color\": \"#6b7280\"\n  },\n  \"text-lg\": {\n    \"fontSize\": 18,\n    \"lineHeight\": 28\n  },\n  \"text-xs\": {\n    \"fontSize\": 12,\n    \"lineHeight\": 16\n  },\n  \"text-xl\": {\n    \"fontSize\": 20,\n    \"lineHeight\": 28\n  }\n}));\nglobalThis.tailwindcss_react_native_media = Object.assign(globalThis.tailwindcss_react_native_media || {}, {});","map":{"version":3,"names":["React","useState","urlFor","MinusCircleIcon","DishRow","id","name","description","image","price","isPressed","setIsPressed","borderWidth","borderColor","uri","url","items","length"],"sources":["/Users/shivam/Projects/React-native/delivery-app/components/DishRow.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { urlFor } from \"../sanity\";\nimport { MinusCircleIcon } from \"react-native-heroicons/outline\";\n\nconst DishRow = ({ id, name, description, image, price }) => {\n  const [isPressed, setIsPressed] = useState(0);\n  return (\n    <>\n      <TouchableOpacity className=\"bg-white border p-4 border-gray-200\">\n        <View className=\"flex-row\">\n          <View className=\"flex-1 pr-2\">\n            <Text className=\"text-lg mb-1\">{name}</Text>\n            <Text className=\"text-gray-400\">{description}</Text>\n            <Text className=\"text-gray-400 mt-2 text-l font-bold\">\n              â‚¹{price}\n            </Text>\n          </View>\n          <View>\n            <Image\n              style={{\n                borderWidth: 1,\n                borderColor: \"#F3F3F4\",\n              }}\n              source={{\n                uri: urlFor(image).url(),\n              }}\n              className=\"h-20 w-20\"\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n\n      {isPressed && (\n        <View>\n          <View>\n            <TouchableOpacity>\n              <MinusCircleIcon color={items.length > 0 ? \"#00CCBB\" : \"gray\"} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default DishRow;\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA6C;EAAA,IAA1CC,EAA0C,QAA1CA,EAA0C;EAAA,IAAtCC,IAAsC,QAAtCA,IAAsC;EAAA,IAAhCC,WAAgC,QAAhCA,WAAgC;EAAA,IAAnBC,KAAmB,QAAnBA,KAAmB;EAAA,IAAZC,KAAY,QAAZA,KAAY;;EAC3D,gBAAkCR,QAAQ,CAAC,CAAD,CAA1C;EAAA;EAAA,IAAOS,SAAP;EAAA,IAAkBC,YAAlB;;EACA,OACE;IAAA,WACE;MAAkB,SAAS,EAAC,qCAA5B;MAAA;MAAA,UACE;QAAM,SAAS,EAAC,UAAhB;QAAA;QAAA,WACE;UAAM,SAAS,EAAC,aAAhB;UAAA;UAAA,WACE;YAAM,SAAS,EAAC,cAAhB;YAAA;YAAA,UAAgCL;UAAhC,EADF,EAEE;YAAM,SAAS,EAAC,eAAhB;YAAA;YAAA,UAAiCC;UAAjC,EAFF,EAGE;YAAM,SAAS,EAAC,qCAAhB;YAAA;YAAA,qBACIE,KADJ;UAAA,EAHF;QAAA,EADF,EAQE,KAAC,IAAD;UAAA,UACE;YACE,KAAK,EAAE;cACLG,WAAW,EAAE,CADR;cAELC,WAAW,EAAE;YAFR,CADT;YAKE,MAAM,EAAE;cACNC,GAAG,EAAEZ,MAAM,CAACM,KAAD,CAAN,CAAcO,GAAd;YADC,CALV;YAQE,SAAS,EAAC,WARZ;YAAA;UAAA;QADF,EARF;MAAA;IADF,EADF,EAyBGL,SAAS,IACR,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAA,UACE,KAAC,gBAAD;UAAA,UACE,KAAC,eAAD;YAAiB,KAAK,EAAEM,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,SAAnB,GAA+B;UAAvD;QADF;MADF;IADF,EA1BJ;EAAA,EADF;AAqCD,CAvCD;;AAyCA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}