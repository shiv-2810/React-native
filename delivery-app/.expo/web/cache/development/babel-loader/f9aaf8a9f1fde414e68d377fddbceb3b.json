{"ast":null,"code":"import { StyledComponent } from \"tailwindcss-react-native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useLayoutEffect } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { urlFor } from \"../sanity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RestaurantScreen = function RestaurantScreen() {\n  var navigation = useNavigation();\n\n  var _useRoute = useRoute(),\n      _useRoute$params = _useRoute.params,\n      id = _useRoute$params.id,\n      imgUrl = _useRoute$params.imgUrl,\n      title = _useRoute$params.title,\n      rating = _useRoute$params.rating,\n      genre = _useRoute$params.genre,\n      address = _useRoute$params.address,\n      short_description = _useRoute$params.short_description,\n      dishes = _useRoute$params.dishes,\n      long = _useRoute$params.long,\n      lat = _useRoute$params.lat;\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, []);\n  return _jsx(ScrollView, {\n    children: _jsx(View, {\n      children: _jsx(Image, {\n        source: {\n          uri: urlFor(imgUrl).url()\n        }\n      })\n    })\n  });\n};\n\nexport default RestaurantScreen;","map":{"version":3,"names":["React","useLayoutEffect","useNavigation","useRoute","urlFor","RestaurantScreen","navigation","params","id","imgUrl","title","rating","genre","address","short_description","dishes","long","lat","setOptions","headerShown","uri","url"],"sources":["/Users/shivam/Projects/React-native/delivery-app/screens/RestaurantScreen.js"],"sourcesContent":["import { View, Text, ScrollView, Image } from \"react-native\";\nimport React, { useLayoutEffect } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { urlFor } from \"../sanity\";\n\nconst RestaurantScreen = () => {\n  const navigation = useNavigation();\n  const {\n    params: {\n      id,\n      imgUrl,\n      title,\n      rating,\n      genre,\n      address,\n      short_description,\n      dishes,\n      long,\n      lat,\n    },\n  } = useRoute();\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, []);\n  return (\n    <ScrollView>\n      <View>\n        <Image\n          source={{\n            uri: urlFor(imgUrl).url(),\n          }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default RestaurantScreen;\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,SAASC,MAAT;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAC7B,IAAMC,UAAU,GAAGJ,aAAa,EAAhC;;EACA,gBAaIC,QAAQ,EAbZ;EAAA,iCACEI,MADF;EAAA,IAEIC,EAFJ,oBAEIA,EAFJ;EAAA,IAGIC,MAHJ,oBAGIA,MAHJ;EAAA,IAIIC,KAJJ,oBAIIA,KAJJ;EAAA,IAKIC,MALJ,oBAKIA,MALJ;EAAA,IAMIC,KANJ,oBAMIA,KANJ;EAAA,IAOIC,OAPJ,oBAOIA,OAPJ;EAAA,IAQIC,iBARJ,oBAQIA,iBARJ;EAAA,IASIC,MATJ,oBASIA,MATJ;EAAA,IAUIC,IAVJ,oBAUIA,IAVJ;EAAA,IAWIC,GAXJ,oBAWIA,GAXJ;;EAeAhB,eAAe,CAAC,YAAM;IACpBK,UAAU,CAACY,UAAX,CAAsB;MACpBC,WAAW,EAAE;IADO,CAAtB;EAGD,CAJc,EAIZ,EAJY,CAAf;EAKA,OACE,KAAC,UAAD;IAAA,UACE,KAAC,IAAD;MAAA,UACE,KAAC,KAAD;QACE,MAAM,EAAE;UACNC,GAAG,EAAEhB,MAAM,CAACK,MAAD,CAAN,CAAeY,GAAf;QADC;MADV;IADF;EADF,EADF;AAWD,CAjCD;;AAmCA,eAAehB,gBAAf"},"metadata":{},"sourceType":"module"}